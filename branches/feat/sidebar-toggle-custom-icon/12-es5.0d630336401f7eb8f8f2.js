function _classCallCheck(b,e){if(!(b instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(b,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(b,a.key,a)}}function _createClass(b,e,t){return e&&_defineProperties(b.prototype,e),t&&_defineProperties(b,t),b}(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{g38n:function(b,e,t){"use strict";t.r(e),t.d(e,"ConfigurationModule",(function(){return u}));var a,o,i,r=t("ofXK"),l=t("tyNb"),n=t("wZee"),s=t("fXoL"),d=t("nKAJ"),c=[{path:"",component:(a=function(){function b(){_classCallCheck(this,b)}return _createClass(b,[{key:"ngAfterViewInit",value:function(){n.highlightAll()}}]),b}(),a.\u0275fac=function(b){return new(b||a)},a.\u0275cmp=s.Fb({type:a,selectors:[["app-configuration"]],decls:254,vars:14,consts:[["header","Configuring Layout",3,"isCollapsable","isRemovable"],["header","Configuration File",3,"isCollapsable","isRemovable"],[1,"language-typescript"],["header","Import Conf And Module",3,"isCollapsable","isRemovable"],["header","App view HTML",3,"isCollapsable","isRemovable"],[1,"language-html"],["header","Configuration properties","contentStyleClasses","table-responsive",3,"isCollapsable","isRemovable"],[1,"table","table-bordered","table-hover"],["header","Layout setters",3,"isCollapsable","isRemovable"],["header","Layout subscriptions",3,"isCollapsable","isRemovable"]],template:function(b,e){1&b&&(s.Sb(0,"mk-box",0),s.Sb(1,"p"),s.wc(2,"If can use the layout components or just use the presentation components of angular-admin-lte."),s.Rb(),s.Sb(3,"p"),s.wc(4," If you chose to use the layout you will need to:"),s.Rb(),s.Sb(5,"ol"),s.Sb(6,"li"),s.wc(7,"Create a layout configuration file."),s.Rb(),s.Sb(8,"li"),s.wc(9,"Import the layout module and provide the layout configuration in your main app module."),s.Rb(),s.Sb(10,"li"),s.wc(11,"Update the main app view."),s.Rb(),s.Rb(),s.Rb(),s.Sb(12,"mk-box",1),s.Sb(13,"pre"),s.Sb(14,"code",2),s.Mb(),s.wc(15,"export var adminLteConf = {\n  skin: 'blue',\n  ...\n  sidebarLeftMenu: [\n    {label: 'Start', route: '/', iconClasses: 'fa fa-th'},\n    ...\n  ]\n};\n"),s.Tb(),s.Rb(),s.Rb(),s.Rb(),s.Sb(16,"mk-box",3),s.Sb(17,"pre"),s.Sb(18,"code",2),s.wc(19,"import { adminLteConf } from './admin-lte.conf';   //Import the layout configuration.\nimport { LayoutModule } from 'angular-admin-lte';   //Import the layout module.\n\n@NgModule({\n  imports: [\n    ...\n    LayoutModule.forRoot(adminLteConf),   //Provide the configuration to the layout module.\n  ],\n  ...\n})\nexport class AppModule {}\n"),s.Rb(),s.Rb(),s.Rb(),s.Sb(20,"mk-box",4),s.Sb(21,"pre"),s.Sb(22,"code",5),s.wc(23,"<mk-layout-wrapper>\n  <mk-layout-sidebar-right>\n    Sidebar right HTML\n  </mk-layout-sidebar-right>\n  <mk-layout-header>\n    <mk-layout-header-logo>Logo HTML</mk-layout-header-logo>\n    <mk-layout-header-logo-mini>Logo Mini HTML</mk-layout-header-logo-mini>\n    Header HTML\n  </mk-layout-header>\n  <mk-layout-sidebar-left>\n    Sidebar left HTML (just above menu)\n  </mk-layout-sidebar-left>\n  <mk-layout-content>\n    <router-outlet></router-outlet>\n  </mk-layout-content>\n  <mk-layout-footer>\n    <mk-layout-footer-left>\n      Footer left HTML\n    </mk-layout-footer-left>\n    <mk-layout-footer-right>\n      Footer right HTML\n    </mk-layout-footer-right>\n  </mk-layout-footer>\n</mk-layout-wrapper>\n"),s.Rb(),s.Rb(),s.Rb(),s.Sb(24,"mk-box",6),s.Sb(25,"table",7),s.Sb(26,"tbody"),s.Sb(27,"tr"),s.Sb(28,"th"),s.wc(29,"Name"),s.Rb(),s.Sb(30,"th"),s.wc(31,"Type"),s.Rb(),s.Sb(32,"th"),s.wc(33,"Default"),s.Rb(),s.Sb(34,"th"),s.wc(35,"Description"),s.Rb(),s.Rb(),s.Sb(36,"tr"),s.Sb(37,"td"),s.wc(38,"skin"),s.Rb(),s.Sb(39,"td"),s.wc(40,"string ('blue' | 'black' | 'purple' | 'green' | 'red' | 'yellow' | 'blue-light' | 'black-light' | 'purple-light' | 'green-light' | 'red-light' | 'yellow-light')"),s.Rb(),s.Sb(41,"td"),s.wc(42,"'blue'"),s.Rb(),s.Sb(43,"td"),s.wc(44,"Set the theme skin."),s.Rb(),s.Rb(),s.Sb(45,"tr"),s.Sb(46,"td"),s.wc(47,"isSidebarLeftCollapsed"),s.Rb(),s.Sb(48,"td"),s.wc(49,"boolean"),s.Rb(),s.Sb(50,"td"),s.wc(51,"false"),s.Rb(),s.Sb(52,"td"),s.wc(53,"Defines if the sidebar left is collapsed."),s.Rb(),s.Rb(),s.Sb(54,"tr"),s.Sb(55,"td"),s.wc(56,"isSidebarLeftExpandOnOver"),s.Rb(),s.Sb(57,"td"),s.wc(58,"boolean"),s.Rb(),s.Sb(59,"td"),s.wc(60,"false"),s.Rb(),s.Sb(61,"td"),s.wc(62,"Define if sidebar left expand on mouse over."),s.Rb(),s.Rb(),s.Sb(63,"tr"),s.Sb(64,"td"),s.wc(65,"isSidebarLeftMini"),s.Rb(),s.Sb(66,"td"),s.wc(67,"boolean"),s.Rb(),s.Sb(68,"td"),s.wc(69,"false"),s.Rb(),s.Sb(70,"td"),s.wc(71,"Define if sidebar left minified is visible."),s.Rb(),s.Rb(),s.Sb(72,"tr"),s.Sb(73,"td"),s.wc(74,"sidebarRightSkin"),s.Rb(),s.Sb(75,"td"),s.wc(76,"string ('dark' | 'light')"),s.Rb(),s.Sb(77,"td"),s.wc(78,"'dark'"),s.Rb(),s.Sb(79,"td"),s.wc(80,"Set the sidebar right skin."),s.Rb(),s.Rb(),s.Sb(81,"tr"),s.Sb(82,"td"),s.wc(83,"isSidebarRightCollapsed"),s.Rb(),s.Sb(84,"td"),s.wc(85,"boolean"),s.Rb(),s.Sb(86,"td"),s.wc(87,"true"),s.Rb(),s.Sb(88,"td"),s.wc(89,"Defines if the sidebar right is collapsed."),s.Rb(),s.Rb(),s.Sb(90,"tr"),s.Sb(91,"td"),s.wc(92,"isSidebarRightOverContent"),s.Rb(),s.Sb(93,"td"),s.wc(94,"boolean"),s.Rb(),s.Sb(95,"td"),s.wc(96,"true"),s.Rb(),s.Sb(97,"td"),s.wc(98,"Defines if sidebar right slide over content."),s.Rb(),s.Rb(),s.Sb(99,"tr"),s.Sb(100,"td"),s.wc(101,"layout"),s.Rb(),s.Sb(102,"td"),s.wc(103,"string ('normal' | 'boxed' | 'fixed')"),s.Rb(),s.Sb(104,"td"),s.wc(105,"'normal'"),s.Rb(),s.Sb(106,"td"),s.wc(107,"Define the layout style."),s.Rb(),s.Rb(),s.Rb(),s.Rb(),s.Rb(),s.Sb(108,"mk-box",8),s.Sb(109,"table",7),s.Sb(110,"tbody"),s.Sb(111,"tr"),s.Sb(112,"th"),s.wc(113,"Name"),s.Rb(),s.Sb(114,"th"),s.wc(115,"Parameters"),s.Rb(),s.Sb(116,"th"),s.wc(117,"Description"),s.Rb(),s.Rb(),s.Sb(118,"tr"),s.Sb(119,"td"),s.wc(120,"sidebarLeftCollapsed()"),s.Rb(),s.Sb(121,"td"),s.wc(122,"boolean"),s.Rb(),s.Sb(123,"td"),s.wc(124,"Programmatically set if sidebar left is collapsed."),s.Rb(),s.Rb(),s.Sb(125,"tr"),s.Sb(126,"td"),s.wc(127,"sidebarLeftExpandOnOver()"),s.Rb(),s.Sb(128,"td"),s.wc(129,"boolean"),s.Rb(),s.Sb(130,"td"),s.wc(131,"Programmatically set if sidebar left expand on over."),s.Rb(),s.Rb(),s.Sb(132,"tr"),s.Sb(133,"td"),s.wc(134,"sidebarLeftExpandOnOver()"),s.Rb(),s.Sb(135,"td"),s.wc(136,"boolean"),s.Rb(),s.Sb(137,"td"),s.wc(138,"Programmatically set if sidebar left expand on over."),s.Rb(),s.Rb(),s.Sb(139,"tr"),s.Sb(140,"td"),s.wc(141,"setSidebarRightSkin()"),s.Rb(),s.Sb(142,"td"),s.wc(143,"'dark' | 'light'"),s.Rb(),s.Sb(144,"td"),s.wc(145,"Programmatically defines sidebar right skin."),s.Rb(),s.Rb(),s.Sb(146,"tr"),s.Sb(147,"td"),s.wc(148,"sidebarLeftMini()"),s.Rb(),s.Sb(149,"td"),s.wc(150,"boolean"),s.Rb(),s.Sb(151,"td"),s.wc(152,"Programmatically set if sidebar left collapsed is visible."),s.Rb(),s.Rb(),s.Sb(153,"tr"),s.Sb(154,"td"),s.wc(155,"sidebarRightCollapsed()"),s.Rb(),s.Sb(156,"td"),s.wc(157,"boolean"),s.Rb(),s.Sb(158,"td"),s.wc(159,"Programmatically set if sidebar right is collapsed."),s.Rb(),s.Rb(),s.Sb(160,"tr"),s.Sb(161,"td"),s.wc(162,"sidebarRightOverContent()"),s.Rb(),s.Sb(163,"td"),s.wc(164,"boolean"),s.Rb(),s.Sb(165,"td"),s.wc(166,"Programmatically set if sidebar right slide over content."),s.Rb(),s.Rb(),s.Sb(167,"tr"),s.Sb(168,"td"),s.wc(169,"setSidebarLeftMenu()"),s.Rb(),s.Sb(170,"td"),s.wc(171,"Array"),s.Rb(),s.Sb(172,"td"),s.wc(173,"Update sidebar right menu."),s.Rb(),s.Rb(),s.Sb(174,"tr"),s.Sb(175,"td"),s.wc(176,"setLayout()"),s.Rb(),s.Sb(177,"td"),s.wc(178,"string"),s.Rb(),s.Sb(179,"td"),s.wc(180,"Update layout style."),s.Rb(),s.Rb(),s.Sb(181,"tr"),s.Sb(182,"td"),s.wc(183,"setSkin()"),s.Rb(),s.Sb(184,"td"),s.wc(185,"string"),s.Rb(),s.Sb(186,"td"),s.wc(187,"Update theme skin."),s.Rb(),s.Rb(),s.Rb(),s.Rb(),s.Rb(),s.Sb(188,"mk-box",9),s.Sb(189,"table",7),s.Sb(190,"tbody"),s.Sb(191,"tr"),s.Sb(192,"th"),s.wc(193,"Name"),s.Rb(),s.Sb(194,"th"),s.wc(195,"Parameters"),s.Rb(),s.Sb(196,"th"),s.wc(197,"Description"),s.Rb(),s.Rb(),s.Sb(198,"tr"),s.Sb(199,"td"),s.wc(200,"isSidebarLeftCollapsed"),s.Rb(),s.Sb(201,"td"),s.wc(202,"Observable<boolean>"),s.Rb(),s.Sb(203,"td"),s.wc(204,"Subscribe to sidebar left collapse status."),s.Rb(),s.Rb(),s.Sb(205,"tr"),s.Sb(206,"td"),s.wc(207,"isSidebarLeftExpandOnOver"),s.Rb(),s.Sb(208,"td"),s.wc(209,"Observable<boolean>"),s.Rb(),s.Sb(210,"td"),s.wc(211,"Subscribe to sidebar left expand on over status."),s.Rb(),s.Rb(),s.Sb(212,"tr"),s.Sb(213,"td"),s.wc(214,"isSidebarLeftMini"),s.Rb(),s.Sb(215,"td"),s.wc(216,"Observable<boolean>"),s.Rb(),s.Sb(217,"td"),s.wc(218,"Subscribe to sidebar left mini status."),s.Rb(),s.Rb(),s.Sb(219,"tr"),s.Sb(220,"td"),s.wc(221,"sidebarRightSkin"),s.Rb(),s.Sb(222,"td"),s.wc(223,"Observable<string>"),s.Rb(),s.Sb(224,"td"),s.wc(225,"Subscribe to sidebar right skin."),s.Rb(),s.Rb(),s.Sb(226,"tr"),s.Sb(227,"td"),s.wc(228,"isSidebarRightCollapsed"),s.Rb(),s.Sb(229,"td"),s.wc(230,"Observable<boolean>"),s.Rb(),s.Sb(231,"td"),s.wc(232,"Subscribe to sidebar right collapsed status."),s.Rb(),s.Rb(),s.Sb(233,"tr"),s.Sb(234,"td"),s.wc(235,"isSidebarRightOverContent"),s.Rb(),s.Sb(236,"td"),s.wc(237,"Observable<Array>"),s.Rb(),s.Sb(238,"td"),s.wc(239,"Subscribe to sidebar right over content status."),s.Rb(),s.Rb(),s.Sb(240,"tr"),s.Sb(241,"td"),s.wc(242,"layout"),s.Rb(),s.Sb(243,"td"),s.wc(244,"Observable<string>"),s.Rb(),s.Sb(245,"td"),s.wc(246,"Subscribe to layout style changes."),s.Rb(),s.Rb(),s.Sb(247,"tr"),s.Sb(248,"td"),s.wc(249,"skin"),s.Rb(),s.Sb(250,"td"),s.wc(251,"Observable<string>"),s.Rb(),s.Sb(252,"td"),s.wc(253,"Subscribe to theme skin changes."),s.Rb(),s.Rb(),s.Rb(),s.Rb(),s.Rb()),2&b&&(s.gc("isCollapsable",!1)("isRemovable",!1),s.zb(12),s.gc("isCollapsable",!1)("isRemovable",!1),s.zb(4),s.gc("isCollapsable",!1)("isRemovable",!1),s.zb(4),s.gc("isCollapsable",!1)("isRemovable",!1),s.zb(4),s.gc("isCollapsable",!0)("isRemovable",!1),s.zb(84),s.gc("isCollapsable",!1)("isRemovable",!1),s.zb(80),s.gc("isCollapsable",!1)("isRemovable",!1))},directives:[d.a],encapsulation:2}),a)}],S=((o=function b(){_classCallCheck(this,b)}).\u0275mod=s.Jb({type:o}),o.\u0275inj=s.Ib({factory:function(b){return new(b||o)},imports:[[l.i.forChild(c)],l.i]}),o),R=t("vKRT"),u=((i=function b(){_classCallCheck(this,b)}).\u0275mod=s.Jb({type:i}),i.\u0275inj=s.Ib({factory:function(b){return new(b||i)},imports:[[r.b,S,R.d]]}),i)}}]);