(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{g38n:function(b,e,t){"use strict";t.r(e),t.d(e,"ConfigurationModule",(function(){return c}));var a=t("ofXK"),o=t("tyNb"),i=t("wZee"),r=t("fXoL"),l=t("nKAJ");const n=[{path:"",component:(()=>{class b{ngAfterViewInit(){i.highlightAll()}}return b.\u0275fac=function(e){return new(e||b)},b.\u0275cmp=r.Fb({type:b,selectors:[["app-configuration"]],decls:254,vars:14,consts:[["header","Configuring Layout",3,"isCollapsable","isRemovable"],["header","Configuration File",3,"isCollapsable","isRemovable"],[1,"language-typescript"],["header","Import Conf And Module",3,"isCollapsable","isRemovable"],["header","App view HTML",3,"isCollapsable","isRemovable"],[1,"language-html"],["header","Configuration properties","contentStyleClasses","table-responsive",3,"isCollapsable","isRemovable"],[1,"table","table-bordered","table-hover"],["header","Layout setters",3,"isCollapsable","isRemovable"],["header","Layout subscriptions",3,"isCollapsable","isRemovable"]],template:function(b,e){1&b&&(r.Sb(0,"mk-box",0),r.Sb(1,"p"),r.wc(2,"If can use the layout components or just use the presentation components of angular-admin-lte."),r.Rb(),r.Sb(3,"p"),r.wc(4," If you chose to use the layout you will need to:"),r.Rb(),r.Sb(5,"ol"),r.Sb(6,"li"),r.wc(7,"Create a layout configuration file."),r.Rb(),r.Sb(8,"li"),r.wc(9,"Import the layout module and provide the layout configuration in your main app module."),r.Rb(),r.Sb(10,"li"),r.wc(11,"Update the main app view."),r.Rb(),r.Rb(),r.Rb(),r.Sb(12,"mk-box",1),r.Sb(13,"pre"),r.Sb(14,"code",2),r.Mb(),r.wc(15,"export var adminLteConf = {\n  skin: 'blue',\n  ...\n  sidebarLeftMenu: [\n    {label: 'Start', route: '/', iconClasses: 'fa fa-th'},\n    ...\n  ]\n};\n"),r.Tb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(16,"mk-box",3),r.Sb(17,"pre"),r.Sb(18,"code",2),r.wc(19,"import { adminLteConf } from './admin-lte.conf';   //Import the layout configuration.\nimport { LayoutModule } from 'angular-admin-lte';   //Import the layout module.\n\n@NgModule({\n  imports: [\n    ...\n    LayoutModule.forRoot(adminLteConf),   //Provide the configuration to the layout module.\n  ],\n  ...\n})\nexport class AppModule {}\n"),r.Rb(),r.Rb(),r.Rb(),r.Sb(20,"mk-box",4),r.Sb(21,"pre"),r.Sb(22,"code",5),r.wc(23,"<mk-layout-wrapper>\n  <mk-layout-sidebar-right>\n    Sidebar right HTML\n  </mk-layout-sidebar-right>\n  <mk-layout-header>\n    <mk-layout-header-logo>Logo HTML</mk-layout-header-logo>\n    <mk-layout-header-logo-mini>Logo Mini HTML</mk-layout-header-logo-mini>\n    Header HTML\n  </mk-layout-header>\n  <mk-layout-sidebar-left>\n    Sidebar left HTML (just above menu)\n  </mk-layout-sidebar-left>\n  <mk-layout-content>\n    <router-outlet></router-outlet>\n  </mk-layout-content>\n  <mk-layout-footer>\n    <mk-layout-footer-left>\n      Footer left HTML\n    </mk-layout-footer-left>\n    <mk-layout-footer-right>\n      Footer right HTML\n    </mk-layout-footer-right>\n  </mk-layout-footer>\n</mk-layout-wrapper>\n"),r.Rb(),r.Rb(),r.Rb(),r.Sb(24,"mk-box",6),r.Sb(25,"table",7),r.Sb(26,"tbody"),r.Sb(27,"tr"),r.Sb(28,"th"),r.wc(29,"Name"),r.Rb(),r.Sb(30,"th"),r.wc(31,"Type"),r.Rb(),r.Sb(32,"th"),r.wc(33,"Default"),r.Rb(),r.Sb(34,"th"),r.wc(35,"Description"),r.Rb(),r.Rb(),r.Sb(36,"tr"),r.Sb(37,"td"),r.wc(38,"skin"),r.Rb(),r.Sb(39,"td"),r.wc(40,"string ('blue' | 'black' | 'purple' | 'green' | 'red' | 'yellow' | 'blue-light' | 'black-light' | 'purple-light' | 'green-light' | 'red-light' | 'yellow-light')"),r.Rb(),r.Sb(41,"td"),r.wc(42,"'blue'"),r.Rb(),r.Sb(43,"td"),r.wc(44,"Set the theme skin."),r.Rb(),r.Rb(),r.Sb(45,"tr"),r.Sb(46,"td"),r.wc(47,"isSidebarLeftCollapsed"),r.Rb(),r.Sb(48,"td"),r.wc(49,"boolean"),r.Rb(),r.Sb(50,"td"),r.wc(51,"false"),r.Rb(),r.Sb(52,"td"),r.wc(53,"Defines if the sidebar left is collapsed."),r.Rb(),r.Rb(),r.Sb(54,"tr"),r.Sb(55,"td"),r.wc(56,"isSidebarLeftExpandOnOver"),r.Rb(),r.Sb(57,"td"),r.wc(58,"boolean"),r.Rb(),r.Sb(59,"td"),r.wc(60,"false"),r.Rb(),r.Sb(61,"td"),r.wc(62,"Define if sidebar left expand on mouse over."),r.Rb(),r.Rb(),r.Sb(63,"tr"),r.Sb(64,"td"),r.wc(65,"isSidebarLeftMini"),r.Rb(),r.Sb(66,"td"),r.wc(67,"boolean"),r.Rb(),r.Sb(68,"td"),r.wc(69,"false"),r.Rb(),r.Sb(70,"td"),r.wc(71,"Define if sidebar left minified is visible."),r.Rb(),r.Rb(),r.Sb(72,"tr"),r.Sb(73,"td"),r.wc(74,"sidebarRightSkin"),r.Rb(),r.Sb(75,"td"),r.wc(76,"string ('dark' | 'light')"),r.Rb(),r.Sb(77,"td"),r.wc(78,"'dark'"),r.Rb(),r.Sb(79,"td"),r.wc(80,"Set the sidebar right skin."),r.Rb(),r.Rb(),r.Sb(81,"tr"),r.Sb(82,"td"),r.wc(83,"isSidebarRightCollapsed"),r.Rb(),r.Sb(84,"td"),r.wc(85,"boolean"),r.Rb(),r.Sb(86,"td"),r.wc(87,"true"),r.Rb(),r.Sb(88,"td"),r.wc(89,"Defines if the sidebar right is collapsed."),r.Rb(),r.Rb(),r.Sb(90,"tr"),r.Sb(91,"td"),r.wc(92,"isSidebarRightOverContent"),r.Rb(),r.Sb(93,"td"),r.wc(94,"boolean"),r.Rb(),r.Sb(95,"td"),r.wc(96,"true"),r.Rb(),r.Sb(97,"td"),r.wc(98,"Defines if sidebar right slide over content."),r.Rb(),r.Rb(),r.Sb(99,"tr"),r.Sb(100,"td"),r.wc(101,"layout"),r.Rb(),r.Sb(102,"td"),r.wc(103,"string ('normal' | 'boxed' | 'fixed')"),r.Rb(),r.Sb(104,"td"),r.wc(105,"'normal'"),r.Rb(),r.Sb(106,"td"),r.wc(107,"Define the layout style."),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(108,"mk-box",8),r.Sb(109,"table",7),r.Sb(110,"tbody"),r.Sb(111,"tr"),r.Sb(112,"th"),r.wc(113,"Name"),r.Rb(),r.Sb(114,"th"),r.wc(115,"Parameters"),r.Rb(),r.Sb(116,"th"),r.wc(117,"Description"),r.Rb(),r.Rb(),r.Sb(118,"tr"),r.Sb(119,"td"),r.wc(120,"sidebarLeftCollapsed()"),r.Rb(),r.Sb(121,"td"),r.wc(122,"boolean"),r.Rb(),r.Sb(123,"td"),r.wc(124,"Programmatically set if sidebar left is collapsed."),r.Rb(),r.Rb(),r.Sb(125,"tr"),r.Sb(126,"td"),r.wc(127,"sidebarLeftExpandOnOver()"),r.Rb(),r.Sb(128,"td"),r.wc(129,"boolean"),r.Rb(),r.Sb(130,"td"),r.wc(131,"Programmatically set if sidebar left expand on over."),r.Rb(),r.Rb(),r.Sb(132,"tr"),r.Sb(133,"td"),r.wc(134,"sidebarLeftExpandOnOver()"),r.Rb(),r.Sb(135,"td"),r.wc(136,"boolean"),r.Rb(),r.Sb(137,"td"),r.wc(138,"Programmatically set if sidebar left expand on over."),r.Rb(),r.Rb(),r.Sb(139,"tr"),r.Sb(140,"td"),r.wc(141,"setSidebarRightSkin()"),r.Rb(),r.Sb(142,"td"),r.wc(143,"'dark' | 'light'"),r.Rb(),r.Sb(144,"td"),r.wc(145,"Programmatically defines sidebar right skin."),r.Rb(),r.Rb(),r.Sb(146,"tr"),r.Sb(147,"td"),r.wc(148,"sidebarLeftMini()"),r.Rb(),r.Sb(149,"td"),r.wc(150,"boolean"),r.Rb(),r.Sb(151,"td"),r.wc(152,"Programmatically set if sidebar left collapsed is visible."),r.Rb(),r.Rb(),r.Sb(153,"tr"),r.Sb(154,"td"),r.wc(155,"sidebarRightCollapsed()"),r.Rb(),r.Sb(156,"td"),r.wc(157,"boolean"),r.Rb(),r.Sb(158,"td"),r.wc(159,"Programmatically set if sidebar right is collapsed."),r.Rb(),r.Rb(),r.Sb(160,"tr"),r.Sb(161,"td"),r.wc(162,"sidebarRightOverContent()"),r.Rb(),r.Sb(163,"td"),r.wc(164,"boolean"),r.Rb(),r.Sb(165,"td"),r.wc(166,"Programmatically set if sidebar right slide over content."),r.Rb(),r.Rb(),r.Sb(167,"tr"),r.Sb(168,"td"),r.wc(169,"setSidebarLeftMenu()"),r.Rb(),r.Sb(170,"td"),r.wc(171,"Array"),r.Rb(),r.Sb(172,"td"),r.wc(173,"Update sidebar right menu."),r.Rb(),r.Rb(),r.Sb(174,"tr"),r.Sb(175,"td"),r.wc(176,"setLayout()"),r.Rb(),r.Sb(177,"td"),r.wc(178,"string"),r.Rb(),r.Sb(179,"td"),r.wc(180,"Update layout style."),r.Rb(),r.Rb(),r.Sb(181,"tr"),r.Sb(182,"td"),r.wc(183,"setSkin()"),r.Rb(),r.Sb(184,"td"),r.wc(185,"string"),r.Rb(),r.Sb(186,"td"),r.wc(187,"Update theme skin."),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(188,"mk-box",9),r.Sb(189,"table",7),r.Sb(190,"tbody"),r.Sb(191,"tr"),r.Sb(192,"th"),r.wc(193,"Name"),r.Rb(),r.Sb(194,"th"),r.wc(195,"Parameters"),r.Rb(),r.Sb(196,"th"),r.wc(197,"Description"),r.Rb(),r.Rb(),r.Sb(198,"tr"),r.Sb(199,"td"),r.wc(200,"isSidebarLeftCollapsed"),r.Rb(),r.Sb(201,"td"),r.wc(202,"Observable<boolean>"),r.Rb(),r.Sb(203,"td"),r.wc(204,"Subscribe to sidebar left collapse status."),r.Rb(),r.Rb(),r.Sb(205,"tr"),r.Sb(206,"td"),r.wc(207,"isSidebarLeftExpandOnOver"),r.Rb(),r.Sb(208,"td"),r.wc(209,"Observable<boolean>"),r.Rb(),r.Sb(210,"td"),r.wc(211,"Subscribe to sidebar left expand on over status."),r.Rb(),r.Rb(),r.Sb(212,"tr"),r.Sb(213,"td"),r.wc(214,"isSidebarLeftMini"),r.Rb(),r.Sb(215,"td"),r.wc(216,"Observable<boolean>"),r.Rb(),r.Sb(217,"td"),r.wc(218,"Subscribe to sidebar left mini status."),r.Rb(),r.Rb(),r.Sb(219,"tr"),r.Sb(220,"td"),r.wc(221,"sidebarRightSkin"),r.Rb(),r.Sb(222,"td"),r.wc(223,"Observable<string>"),r.Rb(),r.Sb(224,"td"),r.wc(225,"Subscribe to sidebar right skin."),r.Rb(),r.Rb(),r.Sb(226,"tr"),r.Sb(227,"td"),r.wc(228,"isSidebarRightCollapsed"),r.Rb(),r.Sb(229,"td"),r.wc(230,"Observable<boolean>"),r.Rb(),r.Sb(231,"td"),r.wc(232,"Subscribe to sidebar right collapsed status."),r.Rb(),r.Rb(),r.Sb(233,"tr"),r.Sb(234,"td"),r.wc(235,"isSidebarRightOverContent"),r.Rb(),r.Sb(236,"td"),r.wc(237,"Observable<Array>"),r.Rb(),r.Sb(238,"td"),r.wc(239,"Subscribe to sidebar right over content status."),r.Rb(),r.Rb(),r.Sb(240,"tr"),r.Sb(241,"td"),r.wc(242,"layout"),r.Rb(),r.Sb(243,"td"),r.wc(244,"Observable<string>"),r.Rb(),r.Sb(245,"td"),r.wc(246,"Subscribe to layout style changes."),r.Rb(),r.Rb(),r.Sb(247,"tr"),r.Sb(248,"td"),r.wc(249,"skin"),r.Rb(),r.Sb(250,"td"),r.wc(251,"Observable<string>"),r.Rb(),r.Sb(252,"td"),r.wc(253,"Subscribe to theme skin changes."),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Rb()),2&b&&(r.gc("isCollapsable",!1)("isRemovable",!1),r.zb(12),r.gc("isCollapsable",!1)("isRemovable",!1),r.zb(4),r.gc("isCollapsable",!1)("isRemovable",!1),r.zb(4),r.gc("isCollapsable",!1)("isRemovable",!1),r.zb(4),r.gc("isCollapsable",!0)("isRemovable",!1),r.zb(84),r.gc("isCollapsable",!1)("isRemovable",!1),r.zb(80),r.gc("isCollapsable",!1)("isRemovable",!1))},directives:[l.a],encapsulation:2}),b})()}];let s=(()=>{class b{}return b.\u0275mod=r.Jb({type:b}),b.\u0275inj=r.Ib({factory:function(e){return new(e||b)},imports:[[o.i.forChild(n)],o.i]}),b})();var d=t("vKRT");let c=(()=>{class b{}return b.\u0275mod=r.Jb({type:b}),b.\u0275inj=r.Ib({factory:function(e){return new(e||b)},imports:[[a.b,s,d.d]]}),b})()}}]);